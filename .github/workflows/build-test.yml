name: build-test

on:
  pull_request:
    branches:
      - master

defaults:
  run:
    # explicitly setting `bash` enables safe settings (errexit, pipefail, ...)
    shell: bash

jobs:
  build-format-test:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        config: [base, temple, factionhall, tstvhq, gojo-video]
        include:
          - config: base
            theme: basic

          - config: temple
            theme: temple

          - config: factionhall
            theme: factionhall

          - config: tstvhq
            theme: hexennacht

          - config: gojo-video
            theme: basic

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Detect changed files
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          app:
            - 'app/**'

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true # Aliases docker build command to docker buildx

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx

    - name: Set config and theme
      run: |
        app/set_config.sh ${{ matrix.config }}
        app/set_theme.sh ${{ matrix.theme }}

    - name: Install zsh
      if: runner.os == 'Linux'
      run: sudo apt-get update; sudo apt-get install zsh

    - name: Test and format configs
      run: |
        ./format_configs.sh
#
#    - name: Commit config changes
#      uses: EndBug/add-and-commit@v7
#      with:
#        default_author: github_actions
#        message: 'Autoformat configs with format_configs.sh'
#        add: "app/config/**/*json"

    - name: Install protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.x'

    - name: Build config and client
      run: |
        make env
        docker-compose pull node
        make webpack

    - name: Build app image
      if: ${{ steps.changes.outputs.app }} == 'true'
      uses: docker/build-push-action@v2
      with:
        context: ./app
        builder: ${{ steps.buildx.outputs.name }}
        file: ./app/Dockerfile
        push: false
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
